=========================================================================================================================
来自: http://man.linuxde.net/tr
语法
tr (选项) (参数)
选项
-c或——complerment：取代所有不属于第一字符集的字符； 
-d或——delete：删除所有属于第一字符集的字符；
    echo "hello 123 world 456" | tr -d '0-9'
-s或--squeeze-repeats：把连续重复的字符以单独一个字符表示； 
    echo "thissss is a text linnnnnnne." | tr -s ' sn'
-t或--truncate-set1：先删除第一字符集较第二字符集多出的字符。
参数
字符集1：指定要转换或删除的原字符集。当执行转换操作时，必须使用参数“字符集2”指定转换的目标字符集。但执行删除操作时，不需要参数“字符集2”； 字符集2：指定要转换成的目标字符集。

tr可以使用的字符类： 
[:alnum:]：字母和数字 
[:alpha:]：字母 
[:cntrl:]：控制（非打印）字符 
[:digit:]：数字 
[:graph:]：图形字符 
[:lower:]：小写字母 
[:print:]：可打印字符 
[:punct:]：标点符号 
[:space:]：空白字符 
[:upper:]：大写字母 
[:xdigit:]：十六进制字符
使用方式： 
tr '[:lower:]' '[:upper:]'

举例：
换大小写，把所有小写的字符换成大写的字符
echo 123qwe123 | tr 'a-z' 'A-Z'  
'a-z' 和 'A-Z'都是集合，集合是可以自己制定的，例如：'ABD-}'、'bB.,'、'a-de-h'、'a-c0-9'都属于集合，集合里可以使用'\n'、'\t'，还可以使用其他ASCII字符。

把换行符换成制表符
cat test.txt | tr '\n' '\t' 

先把“1”换成“2”，然后如果有多个“2”一起的话，刚把这些“2”压缩成一个“2”
cat test.txt | tr -s '1' '2'  

巧妙使用tr做数字相加操作：
echo 1 2 3 4 5 6 7 8 9 | xargs -n1 | echo $[ $(tr '\n' '+') 0 ]

删除Windows文件“造成”的'^M'字符： 
cat file | tr -s "\r" "\n" > new_file 或 cat file | tr -d "\r" > new_file
=========================================================================================================================